# Generated by Django 5.1.11 on 2025-07-08 23:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0002_alter_event_currency'),
        ('users', '0002_organizerprofile_follow'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('total_events', models.PositiveIntegerField(default=0, verbose_name='Total events')),
                ('new_events', models.PositiveIntegerField(default=0, verbose_name='New events')),
                ('published_events', models.PositiveIntegerField(default=0, verbose_name='Published events')),
                ('total_users', models.PositiveIntegerField(default=0, verbose_name='Total users')),
                ('new_users', models.PositiveIntegerField(default=0, verbose_name='New users')),
                ('active_users', models.PositiveIntegerField(default=0, verbose_name='Active users')),
                ('total_tickets', models.PositiveIntegerField(default=0, verbose_name='Total tickets')),
                ('new_tickets', models.PositiveIntegerField(default=0, verbose_name='New tickets')),
                ('confirmed_tickets', models.PositiveIntegerField(default=0, verbose_name='Confirmed tickets')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total revenue')),
                ('new_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='New revenue')),
                ('total_views', models.PositiveIntegerField(default=0, verbose_name='Total views')),
                ('unique_visitors', models.PositiveIntegerField(default=0, verbose_name='Unique visitors')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Daily Statistics',
                'verbose_name_plural': 'Daily Statistics',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='EventView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_views', to='events.event')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event View',
                'verbose_name_plural': 'Event Views',
                'indexes': [models.Index(fields=['event', 'timestamp'], name='analytics_e_event_i_a30d9d_idx'), models.Index(fields=['user', 'timestamp'], name='analytics_e_user_id_05d659_idx'), models.Index(fields=['ip_address', 'timestamp'], name='analytics_e_ip_addr_31dc89_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrganizerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Year')),
                ('month', models.PositiveIntegerField(verbose_name='Month')),
                ('events_created', models.PositiveIntegerField(default=0, verbose_name='Events created')),
                ('events_published', models.PositiveIntegerField(default=0, verbose_name='Events published')),
                ('total_attendees', models.PositiveIntegerField(default=0, verbose_name='Total attendees')),
                ('profile_views', models.PositiveIntegerField(default=0, verbose_name='Profile views')),
                ('event_views', models.PositiveIntegerField(default=0, verbose_name='Event views')),
                ('new_followers', models.PositiveIntegerField(default=0, verbose_name='New followers')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total revenue')),
                ('average_ticket_price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Average ticket price')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_stats', to='users.organizerprofile')),
            ],
            options={
                'verbose_name': 'Organizer Statistics',
                'verbose_name_plural': 'Organizer Statistics',
                'ordering': ['-year', '-month'],
                'unique_together': {('organizer', 'year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='OrganizerView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_views', to='users.organizerprofile')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organizer View',
                'verbose_name_plural': 'Organizer Views',
                'indexes': [models.Index(fields=['organizer', 'timestamp'], name='analytics_o_organiz_698ded_idx'), models.Index(fields=['user', 'timestamp'], name='analytics_o_user_id_2238e3_idx')],
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=200, verbose_name='Search query')),
                ('ip_address', models.GenericIPAddressField()),
                ('results_count', models.PositiveIntegerField(default=0, verbose_name='Results count')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.category')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.city')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Search Query',
                'verbose_name_plural': 'Search Queries',
                'indexes': [models.Index(fields=['query'], name='analytics_s_query_44edad_idx'), models.Index(fields=['timestamp'], name='analytics_s_timesta_dab2b0_idx')],
            },
        ),
        migrations.CreateModel(
            name='TicketRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=50, verbose_name='Session ID')),
                ('step', models.CharField(choices=[('started', 'Registration Started'), ('form_filled', 'Form Filled'), ('payment_attempted', 'Payment Attempted'), ('completed', 'Registration Completed'), ('abandoned', 'Registration Abandoned')], max_length=20, verbose_name='Registration step')),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration_analytics', to='events.event')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ticket Registration Analytics',
                'verbose_name_plural': 'Ticket Registration Analytics',
                'indexes': [models.Index(fields=['event', 'step', 'timestamp'], name='analytics_t_event_i_57e326_idx'), models.Index(fields=['session_id'], name='analytics_t_session_96553f_idx')],
            },
        ),
    ]
